<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'snc_redis.default' shared service.

include_once $this->targetDirs[3].'/vendor/predis/predis/src/ClientInterface.php';
include_once $this->targetDirs[3].'/vendor/predis/predis/src/Client.php';
include_once $this->targetDirs[3].'/vendor/snc/redis-bundle/Factory/PredisParametersFactory.php';
include_once $this->targetDirs[3].'/vendor/predis/predis/src/Configuration/OptionsInterface.php';
include_once $this->targetDirs[3].'/vendor/predis/predis/src/Configuration/Options.php';
include_once $this->targetDirs[3].'/vendor/predis/predis/src/Profile/ProfileInterface.php';
include_once $this->targetDirs[3].'/vendor/predis/predis/src/Profile/RedisProfile.php';
include_once $this->targetDirs[3].'/vendor/predis/predis/src/Profile/RedisVersion320.php';
include_once $this->targetDirs[3].'/vendor/predis/predis/src/Connection/FactoryInterface.php';
include_once $this->targetDirs[3].'/vendor/predis/predis/src/Connection/Factory.php';
include_once $this->targetDirs[3].'/vendor/snc/redis-bundle/Client/Predis/Connection/ConnectionFactory.php';

$a = new \Predis\Profile\RedisVersion320();
$b = new \Snc\RedisBundle\Client\Predis\Connection\ConnectionFactory($a);
$b->setConnectionWrapperClass('Snc\\RedisBundle\\Client\\Predis\\Connection\\ConnectionWrapper');
$b->setLogger(($this->privates['snc_redis.logger'] ?? $this->getSncRedis_LoggerService()));

return $this->privates['snc_redis.default'] = new \Predis\Client(\Snc\RedisBundle\Factory\PredisParametersFactory::create(['read_write_timeout' => NULL, 'iterable_multibulk' => false, 'serialization' => 'default', 'profile' => 'default', 'prefix' => NULL, 'service' => NULL, 'async_connect' => false, 'timeout' => 5, 'persistent' => false, 'exceptions' => true, 'logging' => true, 'alias' => 'default'], 'Predis\\Connection\\Parameters', $this->getEnv('REDIS_HOST')), new \Predis\Configuration\Options(['read_write_timeout' => NULL, 'iterable_multibulk' => false, 'serialization' => 'default', 'profile' => $a, 'prefix' => NULL, 'service' => NULL, 'async_connect' => false, 'timeout' => 5, 'persistent' => false, 'exceptions' => true, 'connections' => $b]));
